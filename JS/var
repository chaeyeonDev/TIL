console.log(score); //undefined
var score;//변수 선언문
//변수 선언문보다 변수를 참조하는 코드가 앞에 있다. 자바스크립트 코드는 인터프리터에 의해 한줄씩
//순차적으로 실행되므로 console.log(score); 가 가장 먼저 실행되고 순차적으로 다음 줄에 있는 코드를
//실행한다. 따라서 console.log(score);가 실행되는 시점에는 아직 score변수 선언이 실행되지 않았으므로 
//참조 에러가 발생할 것처럼 보인다. 하지만 참조에러가 발생하지 않고 underdefined가 출력된다.
// 변수 선언이 소스코드가 한 줄씩 순차적으로 실행되는 시점, 즉 런타임이 아니라 
// 그 이전 단계에서 먼저 실행되기 때문이다.
// 이처럼 변수 선언문이 코드의 선두로 끌어 올려진 것처럼 동작하는 자바스크립트 고유의 특징을 
// 변수 호이스팅 variable hoisting이라 한다.
score = 80; //값의 할당
//변수에 값을 할당할 때는 =를 사용한다. 우변의 값을 좌변의 변수에 할당한다.
//변수 선언과 값의 할당을 하나의 문statement으로 단출 표현할 수도 있다.
var score = 80; //변수 선언과 값의 할당
//값의 할당은 소스코드가 순차적으로 실행되는 시점인 런타임에 실행된다.
console.log(score);//80